{"version":3,"sources":["Instructions/Instructions.js","Title/Title.js","FightStart/FightStart.js","Message/Message.js","Messages/Messages.js","Choice/Choice.js","Choices/Choices.js","Scroll/Scroll.js","assets/insults.js","EndExchange/EndExchange.js","FightEnd/FightEnd.js","helpers.js","Pirate.js","assets/starterInsults.js","Player.js","Fight/Fight.js","Win/Win.js","Game/Game.js","Debug.js","Info/Info.js","App.js","index.js"],"names":["Instructions","react_default","a","createElement","className","Title","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","evt","_this2","document","getElementsByClassName","style","animation","setTimeout","updateMode","modeToSet","onClick","Component","defaultProps","FightStart","timeoutId","clearTimeout","fightCounter","Message","_ref","name","msg","length","concat","id","Messages","playerMsg","pirateMsg","playerTurnType","src_Message_Message","Choice","makeChoice","choice","disabled","isChoiceMade","Choices","state","setState","updateRound","_this3","choices","map","c","Choice_Choice_Choice","key","Scroll","overflowY","children","allInsults","insult","comeback","EndExchange","turn","turnType","winner","playerWinClass","FightEnd","initNextRound","randomIndex","len","Math","floor","random","Pirate","round","insultPool","initPool","roundPoints","matchedComeback","i","pool","filter","playerInsult","getCorrectResponse","getIncorrectResponse","res","starterInsults","insults","comebacks","player","Player","knownIC","type","index","newIC","toConsumableArray","splice","indexOf","assign","Fight","newRound","exchangeWinner","roundWinner","updateFightCounter","pirate","updateChoices","prevProps","prevState","console","log","initPirate","reset","TIMEOUT_DELAY","_this4","_this5","prevPirateTurnType","removeInsultSpokenByPlayer","isMatch","isNonsenseInsult","swapTurnTypes","addICToKnown","isGameWon","isFightWon","endRound","nextExchange","clearPrevExchangeDisplays","updateKnownIC","addIfUnknown","nextTurnType","FightEnd_FightEnd_FightEnd","src_Messages_Messages","EndExchange_EndExchange_EndExchange","src_Scroll_Scroll","Choices_Choices_Choices","renderContent","Win","Game","mode","showInstructions","handleShowInstructions","st","instructions","Title_Title_Title","FightStart_FightStart_FightStart","Fight_Fight","updatePlayerTurn","updateRoundWin","gameWon","Win_Win_Win","src_Instructions_Instructions","renderMode","Info","href","target","rel","App","Game_Game_Game","Info_Info_Info","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.22bfa5a6.chunk.js","sourcesContent":["import React from 'react';\nimport './Instructions.css';\n\nconst Instructions = () => {\n  return (\n    <div className=\"Instructions container\">\n      <div className=\"Instructions-content container\">\n        <h2>How to Play</h2>\n        <p>Etiam porta sem malesuada magna mollis euismod. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Maecenas sed diam eget risus varius blandit sit amet non magna. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec sed odio dui.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;","import React, { Component } from 'react'\nimport './Title.css';\n\nexport default class Title extends Component {\n  static defaultProps = { modeToSet : 'fightStart'}\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(evt) {\n    let title = document.getElementsByClassName('Title')[0];\n    title.style.animation = 'fadeout 2500ms'\n    setTimeout(() => {\n      this.props.updateMode(this.props.modeToSet);\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <div className=\"Title container\">\n        <h1>Insult <span>Swordfighting</span></h1>\n        <h2>Maecenas sed diam eget risus varius blandit sit amet non magna. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</h2>\n        <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Maecenas faucibus mollis interdum.</p>\n        <button className=\"Title-start-btn btn\" onClick={this.handleClick}>Begin!</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './FightStart.css';\n\nexport default class FightStart extends Component {\n  static defaultProps = { modeToSet : 'fight'};\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.props.updateMode(this.props.modeToSet);\n    }, 3000);\n  }\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId)\n  }\n  render() {\n    return (\n      <div className=\"FightStart container\">\n        <h1>Fight {this.props.fightCounter} Begin!</h1>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './Message.css';\n\nconst Message = ({ name, msg }) => {\n  // if (name.length > 0 && msg.length> 0) {\n  if (msg && msg.length > 0) {\n    return <p className={`Message-${name} Message`}><span id=\"speaker-name\">{name}</span>: {msg}</p>\n  } else {\n    return null;\n  }\n};\n\nexport default Message;","import React from 'react';\nimport Message from '../Message/Message';\nimport './Messages.css';\n\nconst Messages = ({ playerMsg, pirateMsg, playerTurnType }) => {\n  const msgs = () => {\n    if (playerTurnType === 'insult') {\n      return (\n        <div>\n          <Message name=\"Player\" msg={playerMsg} />\n          <Message name=\"Pirate\" msg={pirateMsg} />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Message name=\"Pirate\" msg={pirateMsg} />\n          <Message name=\"Player\" msg={playerMsg} />\n        </div>\n      );\n    }\n\n\n  }\n  return (\n    <div id=\"messages\">\n      {msgs()}\n    </div>\n  );\n};\n\nexport default Messages;","import React, { Component } from 'react'\nimport './Choice.css';\n\nexport default class Choice extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.makeChoice(this.props.choice);\n  }\n  render() {\n    return (\n      <button className=\"Choice\" onClick={this.handleClick} disabled={this.props.isChoiceMade}>\n        <div className=\"Choice-hovered-choice\"></div>\n        <div className=\"Choice-text\">{this.props.choice}</div>\n      </button>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Choice from '../Choice/Choice';\nimport './Choices.css';\n\nexport default class Choices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isChoiceMade: false };\n    this.makeChoice = this.makeChoice.bind(this);\n  }\n\n  makeChoice(choice) {\n    this.setState({ isChoiceMade: true }, () => {\n      // re-enable button click after a delay\n      setTimeout(() => {\n        this.setState({ isChoiceMade: false });\n      }, 500);\n    });\n    this.props.updateRound(choice);\n  }\n\n  render() {\n    return (\n      <div id=\"player-choices\" className=\"Choices container\">\n        {\n          this.props.choices.map(c => (\n            (<Choice\n              choice={c}\n              key={c}\n              makeChoice={this.makeChoice}\n              isChoiceMade={this.state.isChoiceMade}\n          />)))\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflowY: 'scroll' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","const allInsults = [\n  {\n    \"id\" : \"0\",\n    \"insult\" : \"You fight like a Dairy Farmer!\",\n    \"comeback\" : \"How appropriate! You fight like a cow!\"\n  },\n  {\n    \"id\" : \"1\",\n    \"insult\" : \"This is the END for you, you gutter crawling cur!\",\n    \"comeback\" : \"And I've got a little TIP for you, get the POINT?\"\n  },\n  {\n    \"id\": \"2\",\n    \"insult\": \"I've spoken with apes more polite than you!\",\n    \"comeback\": \"I'm glad to hear you attended your family reunion!\"\n  },\n  {\n    \"id\": \"3\",\n    \"insult\": \"Soon you'll be wearing my sword like a shish kebab!\",\n    \"comeback\": \"First you better stop waving it about like a feather duster.\"\n  },\n  {\n    \"id\": \"4\",\n    \"insult\": \"People fall at my feet when they see me coming!\",\n    \"comeback\": \"Even BEFORE they smell your breath?\"\n  },\n  {\n    \"id\": \"5\",\n    \"insult\": \"I'm not going to take your insolence sitting down!\",\n    \"comeback\": \"Your hemorroids are flaring up again eh?\"\n  },\n  {\n    \"id\": \"6\",\n    \"insult\": \"I once owned a dog that was smarter than you.\",\n    \"comeback\": \"He must have taught you everything you know.\"\n  },\n  {\n    \"id\": \"7\",\n    \"insult\": \"Nobody's ever drawn blood from me and nobody ever will.\",\n    \"comeback\": \"You run THAT fast?\"\n  },\n  {\n    \"id\": \"8\",\n    \"insult\": \"Have you stopped wearing diapers yet?\",\n    \"comeback\": \"Why? Did you want to borrow one?\"\n  },\n  {\n    \"id\": \"9\",\n    \"insult\": \"There are no words for how disgusting you are.\",\n    \"comeback\": \"Yes there are. You just never learned them.\"\n  },\n  {\n    \"id\": \"10\",\n    \"insult\": \"You make me want to puke.\",\n    \"comeback\": \"You make me think somebody already did.\"\n  },\n  {\n    \"id\": \"11\",\n    \"insult\": \"My handkerchief will wipe up your blood!\",\n    \"comeback\": \"So you got that job as janitor, after all.\"\n  },\n  {\n    \"id\": \"12\",\n    \"insult\": \"I got this scar on my face during a mighty struggle!\",\n    \"comeback\": \"I hope now you've learned to stop picking your nose.\"\n  },\n  {\n    \"id\": \"13\",\n    \"insult\": \"I've heard you are a contemptible sneak.\",\n    \"comeback\": \"Too bad no one's ever heard of YOU at all.\"\n  },\n  {\n    \"id\": \"14\",\n    \"insult\": \"You're no match for my brains, you poor fool.\",\n    \"comeback\": \"I'd be in real trouble if you ever used them.\"\n  },\n  {\n    \"id\": \"15\",\n    \"insult\": \"You have the manners of a beggar.\",\n    \"comeback\": \"I wanted to make sure you'd feel comfortable with me.\"\n  }\n];\n\nexport default allInsults;","import React, { Component } from 'react'\nimport './EndExchange.css';\n\nexport default class EndExchange extends Component {\n  render() {\n    const turn = this.props.turnType === 'insult' ? 'player' : 'pirate';\n    let msg = '';\n    if (this.props.winner === 'draw') {\n      msg = `Draw! ${turn} turn.`\n    } else {\n      msg = `${this.props.winner} wins the exchange. ${this.props.winner} goes again.`\n    }\n\n    const playerWinClass = this.props.winner === 'player' ?`EndExchange-${this.props.winner}-win` : '';\n    return (\n      <div className={`EndExchange ${playerWinClass}`}>\n        <p>{msg}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './FightEnd.css';\n\nexport default class FightEnd extends Component {\n  static defaultProps = { modeToSet : 'fightStart'};\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.props.initNextRound();\n    this.props.updateMode(this.props.modeToSet);\n    // TODO fadeout effect\n  }\n  render() {\n    return (\n      <div className=\"FightEnd container\">\n        <p>{this.props.winner} wins! </p>\n        <button className=\"btn\" onClick={this.handleClick}>Continue</button>\n      </div>\n    )\n  }\n}\n","const randomIndex = (len) => {\n  return Math.floor(Math.random() * len);\n}\n\nconst delay = (func, timeout = 1000) => {\n  this.delayId = setTimeout(func, timeout);\n}\n\nexport { randomIndex, delay };","import { randomIndex } from './helpers';\nimport allInsults from './assets/insults.js';\n\nexport default class Pirate {\n  constructor(turnType, round) {\n    this.msg = '';\n    this.insultPool = this.initPool(); // the pool to start each round\n    this.turnType = 'comeback';\n    this.roundPoints = 0;\n    this.matchedComeback = false;\n    this.round = round;\n  }\n\n  /**\n * @desc initialize each round's pool of insults for the pirate so they don't\n * use repeat insults\n */\n  initPool() {\n    return allInsults.map(i => i.insult);\n  }\n\n  insult() {\n    if (this.insultPool.length === 0) {\n      // refill insults for now,\n      // TODO maybe end the round in the future\n      this.insultPool = this.initPool();\n    }\n\n    const pool = this.insultPool;\n\n    this.msg = pool[randomIndex(pool.length)];\n    this.insultPool = pool.filter(i => i !== this.msg);\n\n    return this.msg;\n  }\n\n  comeback(playerInsult) {\n    this.matchedComeback = false; // reset\n\n    const correctChance = Math.random();\n    const difficulty = this.round < 4 ? 0.65 : 0.30;\n\n    if (correctChance > difficulty) {\n      this.msg = this.getCorrectResponse(playerInsult);\n      this.matchedComeback = true;\n    } else {\n      this.msg = this.getIncorrectResponse();\n    }\n\n    return this.msg;\n  }\n\n  /**\n     * @desc return the comeback that is paired with the player's chosen insult\n     * @return {String} res - the correct comeback\n     */\n  getCorrectResponse(playerInsult) {\n    const res = allInsults.filter(i => (\n      i.insult === playerInsult\n    ));\n\n    if (res.length === 0) {\n      // if player's insult isn't one of the matching insult/comebacks\n      return this.getIncorrectResponse();\n    } else {\n      return res[0].comeback;\n    }\n  }\n\n  getIncorrectResponse() {\n    let pool = [\n      \"Oh yeah?\",\n      \"I'm shaking, I'm shaking.\",\n      \"I am rubber, you are glue.\"\n    ];\n    let index = randomIndex(pool.length);\n    let res = pool[index];\n    return res ;\n  }\n\n  /**\n   * @desc remove an insult the player used so there's more variety\n   */\n  removeInsultSpokenByPlayer(insult) {\n    this.insultPool = this.insultPool.filter(i => i !== insult );\n  }\n\n  action(playerInsult) {\n    if (this.turnType === 'insult') {\n      this.insult();\n    } else {\n      this.comeback(playerInsult);\n    }\n  }\n}","const starterInsults = {\n  insults: [\n  \"You fight like a Dairy Farmer!\",\n  \"This is the END for you, you gutter crawling cur!\",\n  \"Boy are you ugly!\",\n  \"What an idiot!\"\n  ],\n  comebacks: [\n    \"How appropriate! You fight like a cow!\",\n    \"And I've got a little TIP for you, get the POINT?\",\n    \"Oh yeah?\",\n    \"I am rubber, you are glue.\",\n    \"I'm shaking, I'm shaking.\"\n  ]\n}\n\nexport default starterInsults;","import starterInsults from './assets/starterInsults.js';\n\nclass Player {\n  constructor(knownIC) {\n    this.msg = '';\n    this.knownIC = knownIC;\n    this.turnType = 'insult';\n    this.roundPoints = 0;\n  }\n\n  reset() {\n    this.turnType = 'insult';\n    this.msg = 0;\n    this.roundPoints = 0;\n  }\n\n  updateKnownIC(type, msg) {\n    const index = type === 'insults' ? -2 : -3;\n    let newIC = [...this.knownIC[type]];\n    newIC.splice(index, 0, msg);\n\n    return newIC;\n  }\n\n  updateChoices() {\n    const type = this.turnType === 'insult'\n      ? 'insults' : 'comebacks';\n    return [...this.knownIC[type]];\n  }\n\n  /**\n   * @desc Check if the player uses a nonsense insult that has no\n   * matching comeback, ex. 'Oh yeah?'\n   * @return {Boolean} index of the insult in the player's known insults\n   * being one of the nonsense insults or not\n   */\n  isNonsenseInsult() {\n    let index = this.knownIC.insults.indexOf(this.msg)\n    return index >= this.knownIC.insults.length - 2;\n  }\n\n}\n\nconst player = new Player(Object.assign({}, starterInsults));\n\nexport { player };","import React, { Component } from 'react'\nimport Messages from '../Messages/Messages';\nimport Choices from '../Choices/Choices';\nimport Scroll from '../Scroll/Scroll';\nimport allInsults from '../assets/insults.js';\nimport EndExchange from '../EndExchange/EndExchange';\nimport FightEnd from '../FightEnd/FightEnd';\nimport Pirate from '../Pirate';\nimport { player } from '../Player';\n\nconst TIMEOUT_DELAY = 2000;\n\nexport default class Fight extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newRound : false,\n      exchangeWinner: null,\n      roundWinner : null,\n      choices: [],\n      playerMsg: '',\n      pirateMsg: ''\n    };\n\n    this.updateRound = this.updateRound.bind(this);\n    this.initNextRound = this.initNextRound.bind(this);\n    this.props.updateFightCounter();\n    this.pirate = new Pirate('comeback', this.props.round);\n  }\n\n  componentDidMount() {\n    this.setState({ choices : player.updateChoices() })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(player)\n  }\n\n  /**\n   * @desc Create a new pirate\n   * @return {Object} Pirate\n   */\n  initPirate() {\n    return new Pirate('comeback', this.props.round);\n  }\n\n  /**\n   * @desc initialize everything needed for a new fight round\n   */\n  initNextRound() {\n    this.initPirate();\n    this.setState({\n      roundWinner : null,\n      exchangeWinner : null,\n      playerMsg : '',\n      pirateMsg : ''\n     });\n\n     player.reset();\n  }\n  /**\n   * @desc Check if player's insult/comeback is correct with the pirate's insult/comeback\n   * @return {Number} matched.length\n   */\n  isMatch() {\n    // TODO refactor with find?\n\n    const matched = allInsults.filter(i => {\n      return i[player.turnType] === player.msg && i[this.pirate.turnType] === this.pirate.msg;\n    });\n    return matched.length > 0;\n  }\n\n    nextExchange() {\n    this.pirate.turnType === 'insult' && this.pirate.insult();\n\n    // set choices\n    setTimeout(() => {\n      this.setState({ choices: player.updateChoices() });\n    }, TIMEOUT_DELAY * 2);\n  }\n\n  clearPrevExchangeDisplays() {\n    // clear messages and choices\n    setTimeout(() => {\n      this.setState({\n        pirateMsg: '',\n        playerMsg: '',\n        choices: [],\n        exchangeWinner: null\n      })\n    }, TIMEOUT_DELAY);\n\n    if (player.turnType === 'comeback') {\n      setTimeout(() => {\n        this.setState({\n          pirateMsg: this.pirate.msg,\n          // playerMsg: ''\n        })\n      }, TIMEOUT_DELAY + 800);\n    }\n  }\n\n  isFightWon() {\n    return player.roundPoints === 2 || this.pirate.roundPoints === 2;\n  }\n\n  /**\n   * @desc handles the pirate actions and set up of player choices\n   * @param {String} choice - user's selected insult or comeback\n   */\n  updateRound(choice) {\n    player.msg = choice;\n    this.setState({ playerMsg : player.msg });\n\n    const prevPirateTurnType = this.pirate.turnType;\n\n    if (player.turnType === 'insult') {\n      this.pirate.removeInsultSpokenByPlayer(player.msg);\n    }\n\n    if (this.pirate.turnType === 'comeback') {\n      this.pirate.comeback(player.msg);\n    }\n\n    setTimeout(() => {\n      this.setState({ pirateMsg : this.pirate.msg });\n\n      let winner = '';\n\n      if (this.isMatch() || player.isNonsenseInsult()) {\n        winner = 'draw';\n        this.swapTurnTypes(); // TODO FIX: this causes pirate comeback\n                              // to appear above player insult\n        player.roundPoints = 0;\n        this.pirate.roundPoints = 0;\n      } else {\n        if (player.turnType === 'insult') {\n          winner = 'player';\n          player.roundPoints++;\n        } else {\n          winner = 'pirate';\n          this.pirate.roundPoints++;\n        }\n      }\n\n      this.addICToKnown(prevPirateTurnType);\n\n      if (this.isGameWon()) {\n        this.props.updateMode('win');\n        return;\n      } else if (this.isFightWon()) {\n        this.endRound(winner);\n        return;\n      } else {\n        this.setState({ exchangeWinner: winner });\n        this.nextExchange();\n      }\n      this.clearPrevExchangeDisplays();\n\n    }, TIMEOUT_DELAY/2);\n  } // end updateRound() ==============================================\n\n  addIfUnknown(type, msg) {\n    if (player.knownIC[type].indexOf(msg) === -1) {\n      console.log(`learned ${type}: ${msg}`)\n      player.knownIC[type] = player.updateKnownIC(type, msg);\n    }\n  }\n\n  addICToKnown(type) {\n    // add new insult/comeback if possible\n    if (type === 'comeback' && this.pirate.matchedComeback) {\n      this.addIfUnknown('comebacks', this.pirate.msg);\n    }\n    if (type === 'insult') {\n      this.addIfUnknown('insults', this.pirate.msg);\n    }\n  }\n\n\n  /**\n   * @desc swap turn types of player and pirate\n   */\n  swapTurnTypes() {\n    let nextTurnType = player.turnType === 'insult' ? 'comeback' : 'insult';\n\n    this.pirate.turnType = player.turnType;\n    player.turnType = nextTurnType;\n    console.log('swapping:', player.turnType)\n  }\n\n  endRound(winner) {\n    // set newRound to true and/or set up new round with function\n    // set exchangeWinner to display\n    this.setState({\n      roundWinner : winner\n    })\n  }\n\n  isGameWon() {\n    const len = allInsults.length;\n    // + 2 and + 3 are nonsense insults/comebacks with no pair\n    console.log('insults:', player.knownIC.insults.length-2)\n    console.log('comebacks:', player.knownIC.comebacks.length-3)\n    let res = (player.knownIC.insults.length === len + 2)\n      && (player.knownIC.comebacks.length === len + 3)\n    return res;\n  }\n\n  renderContent() {\n    if (this.state.roundWinner !== null) {\n      return (<FightEnd\n        updateMode={this.props.updateMode}\n        winner={this.state.roundWinner}\n        initNextRound={this.initNextRound}\n        />);\n    } else {\n      return (\n        <div>\n          <Messages\n            playerMsg={this.state.playerMsg}\n            pirateMsg={this.state.pirateMsg}\n            playerTurnType={player.turnType}\n          />\n\n          {\n            this.state.exchangeWinner !== null &&\n            <EndExchange\n              winner={this.state.exchangeWinner}\n              turnType={player.turnType}\n            />\n          }\n\n          <Scroll>\n            <Choices\n              choices={this.state.choices}\n              updateRound={this.updateRound}\n            />\n          </Scroll>\n        </div>\n      )\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"Fight container\">\n        {this.renderContent()}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './Win.css';\n\nexport default class Win extends Component {\n  render() {\n    return (\n      <div className=\"Win container\">\n        <h1>You Win!</h1>\n        <p>You've learned all the insults and comebacks. You're good enough to fight the Sword Master.</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Instructions from '../Instructions/Instructions';\nimport Title from '../Title/Title';\nimport FightStart from '../FightStart/FightStart';\nimport Fight from '../Fight/Fight';\nimport Win from '../Win/Win';\nimport Debug from '../Debug';\n// import ProgressBar from '../ProgressBar/ProgressBar';\nimport './Game.css';\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'fight',\n      showInstructions : false,\n      fightCounter : 1,\n    }\n    this.updateMode = this.updateMode.bind(this);\n    this.handleShowInstructions = this.handleShowInstructions.bind(this);\n    this.updateFightCounter = this.updateFightCounter.bind(this);\n  }\n\n  updateMode(mode) {\n    this.setState({ mode })\n  }\n\n  updateFightCounter() {\n    this.setState(st => ({ fightCounter : st.fightCounter + 1 }));\n  }\n\n  handleShowInstructions(evt) {\n    let instructions = document.getElementsByClassName('Instructions')[0];\n    if (this.state.showInstructions) {\n      instructions.style.animation = 'pullup 1s'\n    }\n\n    setTimeout(() => {\n      this.setState({ showInstructions: !this.state.showInstructions });\n    }, 300);\n  }\n\n  renderMode() {\n    let mode = this.state.mode;\n    if (mode === 'title') return <Title updateMode={this.updateMode} />;\n    else if (mode === 'fightStart')  {\n      return <FightStart\n                updateMode={this.updateMode}\n                fightCounter={this.state.fightCounter}\n              />\n    }\n    else if (mode === 'fight') {\n      return <Fight\n                updateMode={this.updateMode}\n                updatePlayerTurn={this.updatePlayerTurn}\n                updateRoundWin={this.updateRoundWin}\n                updateFightCounter={this.updateFightCounter}\n                round={this.state.fightCounter}\n                gameWon={this.gameWon}\n      />\n    }\n    else if (mode === 'win') {\n      return <Win />\n    }\n  }\n  render() {\n    return (\n      <div className=\"Game container\">\n\n        {/* <Debug  updateMode={this.updateMode} /> */}\n\n        <button className=\"btn\" id=\"Game-instructions-btn\"\n          onClick={this.handleShowInstructions}>\n          {this.state.showInstructions ? 'Hide' : 'Show'} Instructions\n        </button>\n        {this.state.showInstructions && <Instructions />}\n        {this.renderMode()}\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport './Debug.css';\n\nexport default class Debug extends Component {\n  render() {\n    return (\n      <div className=\"Debug\">\n        <p>[ Debug ]</p>\n        <button onClick={() => this.props.updateMode('title')}>Title Mode</button>\n        <button onClick={() => this.props.updateMode('fightStart')}>FightStart Mode</button>\n        <button onClick={() => this.props.updateMode('fight')}>Fight Mode</button>\n        <button onClick={() => this.props.updateMode('fightEnd')}>FightEnd Mode</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './Info.css';\n\nexport default class Info extends Component {\n  render() {\n    return (\n      <div className=\"Info container\">\n        <p>Insult Swordfighting is a mechanic from the <span><a href=\"https://en.wikipedia.org/wiki/Monkey_Island_(series)\" target=\"_blank\" rel=\"noopener noreferrer\">Monkey Island</a></span> point-and-click adventure game series, created by Ron Gilbert and developed by LucasArts. All of the insults/comebacks here are from The Secret of Monkey Island, written by Ron Gilbert, Dave Grossman, and Tim Schafer.</p>\n        <p>I re-created my version of the mechanic with React as a learning experience and for fun. </p>\n        <p><a href=\"https://github.com/robotspacefish\" target=\"_blank\" rel=\"noopener noreferrer\">robotspacefish</a>!</p>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './App.css';\nimport Game from './Game/Game';\nimport Info from './Info/Info';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n      <footer>\n        <Info />\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}